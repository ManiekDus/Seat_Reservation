while True:
        x = input("Podaj liczbe siedzen: ")
        if(x.isnumeric() == True):
            break
        else:
            print("Numer miejsca musi być liczbą")
x = int(x)
seats = ["None"]*(x+1)

    
def print_seats(seats):
    """Wyświetlanie aktualnego stanu rezerwacji miejsc"""
    for i in range(1,len(seats)):
        if(seats[i] == "None"):
            print(f"{i} -> Wolne")
        else:
            print(f"{i} -> {seats[i]}")

def add_reservation(seats:list):
    """Dodawanie nowej rezerwacji"""
    c = len(seats)-1
    while True:
        n = input("Podaj numer siedzenia: ")
        if(n.isnumeric() == True):
            if(int(n) < len(seats) and int(n)  > 0):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")
        else:
            print("Numer miejsca musi być liczbą")
    numerMiejsca = int(n)
    n = input("Podaj swoje imie: ")
    if(seats[numerMiejsca] == 'None'):
        imie = n
        seats[numerMiejsca] = imie
        print("Pomyslnie dodano rezerwacje")
    else:
        print("Miejsce jest juz zajete")
    
    
def remove_reservation(seats:list):
    """Usuwanie istniejącej rezerwacji"""
    c = len(seats)-1
    while True:
        n = input("Podaj numer siedzenia: ")
        if(n.isnumeric() == True):
            if(int(n) < len(seats) and int(n)  > 0):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")
        else:
            print("Numer miejsca musi być liczbą")
    if(seats[int(n)] != 'None'):
        seats[int(n)] = 'None'
        print("Pomyslnie usunieto rezerwacje")
    else:
        print("Miejsce jest wolne")

def modify_reservation(seats:list):
    """Modyfikacja istniejącej rezerwacji"""
    c = len(seats)-1
    
    while True:
        n = input("Podaj numer obecnego siedzenia: ")
        if(n.isnumeric() == True):
            if(int(n) < 11 and int(n)  > 0):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")
        else:
            print("Numer miejsca musi być liczbą")
    while True:
        m = input("Podaj numer nowego siedzenia: ")
        if(n.isnumeric() == True):
            if(int(m) < 11 and int(m)  > 0):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")
        else:
            print("Numer miejsca musi być liczbą")
    
    if(seats[int(n)] == 'None'):
        print("Miejsce jest puste")
    else:
        pom = seats[int(n)]
        if(seats[int(m)] == "None"):
            seats[int(m)] = pom
            seats[int(n)] = "None"
            print("Pomyślnie zmodyfikowano miejsce")
        else:
            print("Nowe miejsce jest zajete")
           
def check_availability(seats:list):
    """Sprawdzenie dostępności wielu miejsc"""
    c = len(seats)-1
    while True:
        check_if_numbers = True
        check_if_inRange = True
        n = input("Podaj liste numerow siedzen (numery oddzielone spacja): ")
        n = n.split(" ")
        print(n)
        for i in range(len(n)):
            if(n[i].isnumeric() == False):
                check_if_numbers = False
            elif(int(n[i]) <=0 or int(n[i]) > len(seats)-1):
                check_if_inRange = False
        if(check_if_numbers):
            if(check_if_inRange):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")    
        else:
            print("Numer miejsca musi być liczbą") 
    for i in n:
        if(seats[int(i)] == 'None'):
            print(f"{int(i)} -> Wolne")
        else:
            print(f"{int(i)} -> Zajęte")

def add_multiple_reservations(seats:list):
    """Rezerwacja wielu miejsc naraz"""
    c = len(seats)-1
    while True:
        check_if_numbers = True
        check_if_inRange = True
        seatIsAvailable = True
        n = input("Podaj liste numerow siedzen (numery oddzielone spacja): ")
        n = n.split(" ")
        for i in range(len(n)):
            if(n[i].isnumeric() == False):
                check_if_numbers = False
            elif(int(n[i]) <=0 or int(n[i]) > len(seats)-1):
                check_if_inRange = False
        if(check_if_numbers):
            if(check_if_inRange):
                break
            else:
                print(f"Numer miejsca musi mieścić się między 1 i {c}.")    
        else:
            print("Numer miejsca musi być liczbą")
    while True:
        imie = input("Podaj swoje imie: ") 
        if(imie != None):
            break
        print("Podaj ")
    
    for i in n:
        if(seats[int(i)] != 'None'):
            seatIsAvailable = False
    if(seatIsAvailable):
        for i in n:
            seats[int(i)] = imie
            print("Pomyslnie dodano rezerwacje")
    else:
        print("Podane miejsca sa juz zajete")

def cancel_all_reservations(seats:list):
    """Anulowanie wszystkich rezerwacji"""
    p = 0
    imie = input("Podaj swoje imie: ") 
    for i in range(1, len(seats)):
        print(seats[i])
        if(seats[i] == imie):
            seats[i] = 'None'
            p = p + 1
    if(p > 0):
        print("Pomysle usunieto rezerwacje")
    else:
        print(f"Nie znaleziono rezerwacji pod imieniem: {imie}")    

def main():
    while True:
        print("")
        print("1. Wyświetlanie aktualnego stanu rezerwacji miejsc")
        print("2. Dodawanie nowej rezerwacji")
        print("3. Usuwanie istniejącej rezerwacji")
        print("4. Modyfikacja istniejącej rezerwacji")
        print("5. Wyjście z programu")
        print("6. Sprawdzenie dostępności wielu miejsc")
        print("7. Rezerwacja wielu miejsc naraz")
        print("8. Anulowanie wszystkich rezerwacji")
        print("")
        n = input("") 
        if(n == '1'): 
            print_seats(seats) 
        if(n == '2'): 
            add_reservation(seats) 
        if(n == '3'): 
            remove_reservation(seats) 
        if(n == '4'): 
            modify_reservation(seats) 
        if(n == '5'): 
            break
        if(n == '6'): 
            check_availability(seats)
        if(n == '7'): 
            add_multiple_reservations(seats)
        if(n == '8'): 
            cancel_all_reservations(seats)
main()
